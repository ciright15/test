version: 1.1.3.{build}

platform:
  - x86
  - x64

environment:
  PATH: C:\msys64\usr\bin;%PATH%
  CL_OPTIONS: /W3 /D_CRT_SECURE_NO_DEPRECATE /DWIN32_LEAN_AND_MEAN /GS /MT /DHAVE_CONFIG_H /I%APPVEYOR_BUILD_FOLDER%
  GENGETOPT: /usr/bin/gengetopt.exe --include-getopt
  HELP2MAN: /usr/bin/true # don't generate manual files
  OPENSSL_1_1_0_FLAGS: # Uncomment if OpenSSL 1.1.0 is needed
    /DHAVE_ASN1_STRING_GET0_DATA=1 /DHAVE_DECL_OPENSSL_ZALLOC=1 /DHAVE_DH_GET0_KEY=1 /DHAVE_DH_GET0_PQG=1 /DHAVE_DH_SET0_KEY=1 /DHAVE_DH_SET0_PQG=1 /DHAVE_ECDSA_SIG_GET0=1 /DHAVE_ECDSA_SIG_SET0=1 /DHAVE_EC_KEY_METHOD=1 /DHAVE_RSA_GET0_KEY=1 /DHAVE_RSA_SET0_KEY=1

matrix:
  - VSVER: 14

install:
  - ps: |
      If ($env:Platform -Match "x86") {
        $env:VCVARS_PLATFORM="x86"
        $env:OPENSSL_PLATFORM="Win32"
        $env:OPENPACE_PLATFORM="win32"
        $env:LIBCRYPTO="libeay32MT.lib"
        $env:PYTHON_PLATFORM=""
      } Else {
        $env:VCVARS_PLATFORM="amd64"
        $env:OPENSSL_PLATFORM="Win64"
        $env:OPENPACE_PLATFORM="win64"
        $env:LIBCRYPTO="libeay32MT.lib"
        $env:PYTHON_PLATFORM="-x64"
      }
  - set PATH=C:\Python38%PYTHON_PLATFORM%;%PATH%
  - set PYTHON_INCLUDE=C:\Python38%PYTHON_PLATFORM%\include
  - set PYTHON_LIB=C:\Python38%PYTHON_PLATFORM%\libs\python38.lib
  - set ARTIFACT=%APPVEYOR_PROJECT_NAME%_%OPENPACE_PLATFORM%-vs%VSVER%-python3
  - set OPENSSL_DIR=C:\OpenSSL-%OPENSSL_PLATFORM%
  - for /f "usebackq tokens=*" %%a in (`cygpath -u %OPENSSL_DIR%`) do set OPENSSL_CYGDIR=%%a
  - set OPENPACE_DIR=C:\%ARTIFACT%
  - for /f "usebackq tokens=*" %%a in (`cygpath -u %OPENPACE_DIR%`) do set DESTDIR=%%a
  - set CRYPTO_CFLAGS=-I%OPENSSL_CYGDIR%/include
  - set CRYPTO_LIBS="-L%OPENSSL_CYGDIR%/lib -llibeay32"

  # Install necessary dependencies using MSYS2 (faster than SF)
  - bash -c "pacman --needed --noconfirm --sync pacman-mirrors"
  - bash -c "pacman --needed --noconfirm --sync autoconf automake libtool gengetopt swig"

  - python -V
  - swig -version

  - ps: |
      $env:VSCOMNTOOLS=(Get-Content ("env:VS" + "$env:VSVER" + "0COMNTOOLS"))
      echo "Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%"
      call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat" %VCVARS_PLATFORM%

build_script:
  # Prepare build with Autotools and MinGW-w64
  - bash -c "autoreconf -i"
  - bash -c "touch src/cvc-create.1 src/cvc-print.1"
  - bash -c "./configure --prefix=/"

  # Compile sources with Visual Studio
  - cd src
  - cl /I%OPENSSL_DIR%\include /I. /DX509DIR=\"/\" /DCVCDIR=\"/\" %CL_OPTIONS% /c ca_lib.c cv_cert.c ...

  - lib /out:libeacMT.lib ws2_32.lib ca_lib.obj ...

  - cl /I%OPENSSL_DIR%\include /I. libeacMT.lib ...

  # Python bindings and packaging
  - cd bindings/python/
  - swig -python -outdir . -I.. eac.i
  - cl /I%OPENSSL_DIR%\include /I%PYTHON_INCLUDE% /I..\..\src %CL_OPTIONS% /c eac_wrap.c

  # Final packaging
  - bash -c "make install-data-recursive"
  - bash -c "cp src/eactest.exe $DESTDIR/bin"
  - bash -c "cp src/cvc-create.exe $DESTDIR/bin"
  - bash -c "tail -n +2 bindings/python/cvc_rehash.in > $DESTDIR/bin/cvc_rehash"

  # Push packaged artifacts
  - 7z a %ARTIFACT%.zip %OPENPACE_DIR%
  - appveyor PushArtifact %ARTIFACT%.zip

cache:
  - C:\msys64\var\cache\pacman\pkg\gengetopt*
  - C:\msys64\var\cache\pacman\pkg\swig*
